import { ConfigServiceInterface } from '../config';
import { Handler } from 'aws-lambda';
import { AsyncHandler, LambdaInterface, SyncHandler } from '@aws-lambda-powertools/commons';
/**
  * Options for the tracer class to be used during initialization.
  *
  * Usage:
  * @example
  * ```typescript
  * const customConfigService: ConfigServiceInterface;
  * const tracerOptions: TracerOptions = {
  *   enabled?: true,
  *   serviceName?: 'serverlessAirline',
  *   captureHTTPsRequests?: true,
  *   customConfigService?: customConfigService, // Only needed for advanced uses
  * };
  *
  * const tracer = new Tracer(tracerOptions);
  * ```
  */
declare type TracerOptions = {
    enabled?: boolean;
    serviceName?: string;
    captureHTTPsRequests?: boolean;
    customConfigService?: ConfigServiceInterface;
};
declare type HandlerMethodDecorator = (target: LambdaInterface, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<SyncHandler<Handler>> | TypedPropertyDescriptor<AsyncHandler<Handler>>) => void;
declare type MethodDecorator = (target: any, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<any>) => any;
export { TracerOptions, HandlerMethodDecorator, MethodDecorator };
//# sourceMappingURL=Tracer.d.ts.map